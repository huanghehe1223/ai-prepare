<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>upc.projectname</groupId>
    <artifactId>upc-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
<!--        <module>upc-pojo</module>-->
        <module>task-service</module>
        <module>user-service</module>
<!--        <module>upc-api</module>-->
        <module>upc-gateway</module>
        <module>upc-common</module>
        <module>upc-redis-starter</module>
<!--        <module>test-starter</module>-->
<!--        <module>test-rmi</module>-->

<!--        <module>atest-yml</module>-->
<!--        <module>upc-main</module>-->

    </modules>

    <dependencies>
        <!--        共同依赖，lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!--        共同依赖，lombok-->



        <!--mysqldriver共同依赖-->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--mysqldriver共同依赖-->


        <!--        mybatis-plus共同依赖-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
            <version>3.5.7</version>
        </dependency>
        <!--        mybatis-plus共同依赖-->

<!--        springweb共同依赖-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


<!--        nacos注册中心，openfeign,ok http,负载均衡，使用openfeign接口和nacao注册中心的四个依赖-->
        <!--nacos 服务注册发现，共同依赖-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>



        <!--OK http 的依赖 共同依赖，用来配置OpenFeign连接池-->
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-okhttp</artifactId>
        </dependency>


        <!--openFeign共同依赖 向nacos注册中心获取服务列表（ip+端口），作用是简化发送http请求的操作-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>


        <!--负载均衡器 共同依赖 openFeign同一种服务获得多个的时候，进行负载均衡需要这个依赖  -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-loadbalancer</artifactId>
        </dependency>



<!--         共同依赖       common依赖,里面有pojo，openfeign 接口，springsecurity-->
        <dependency>
            <groupId>upc.projectname</groupId>
            <artifactId>upc-common</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>


        <!--knife4j自动生成api文档 共同依赖-->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
            <version>4.4.0</version>
        </dependency>






    </dependencies>




    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-cloud.version>2023.0.3</spring-cloud.version>
        <spring-cloud-alibaba.version>2023.0.1.2</spring-cloud-alibaba.version>
        <hutool.version>5.8.11</hutool.version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <!--spring cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>  <!-- 这个和普通的jar包依赖不一样，这个依赖不是jar包，效果相当于引入一个父项目，管理好多依赖的版本 -->
                <scope>import</scope> <!-- 这个普通的一个项目（不是父项目），也能写dependencyManagement，然后引入springcloud的版本管理，相当于引入一个，规定了好多依赖版本的父项目  -->
            </dependency>
            <!--spring cloud alibaba-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>   <!-- 这个和普通的jar包依赖不一样，这个依赖不是jar包，效果相当于引入一个父项目，管理好多依赖的版本 -->
                <scope>import</scope>  <!--nacos jar包只是其中之一，并且父项目也能引入nacos，也会受这个的影响，所以说，相当于引入一个父项目（重点），专门管理依赖版本-->
            </dependency>


            <!--hutool工具包-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>



</project>